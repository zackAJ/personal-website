---
import { getCollection } from 'astro:content'
import PageLayout from '@layouts/PageLayout.astro'
import TopLayout from '@layouts/TopLayout.astro'
import BottomLayout from '@layouts/BottomLayout.astro'
import SearchCollection from '@components/SearchCollection'
import { BLOG } from '@consts'

const posts = (await getCollection('blog'))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())

const tags = [...new Set(posts.flatMap((post) => post.data.tags))].sort(
  (a, b) => a.localeCompare(b),
)

const estimated_initial_size = 28 + posts.length * 158 + (posts.length - 1) * 12
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <TopLayout>
    <div class="animate">
      <h1 class="text-3xl font-semibold text-black dark:text-white mt-2">
        {BLOG.TITLE}
      </h1>
      <div class="mt-1">
        {BLOG.DESCRIPTION}
      </div>
    </div>
  </TopLayout>
  <BottomLayout>
    <div
      id="search-collection-wrapper"
      class="animate"
      style={{ minHeight: `${estimated_initial_size}px` }}
    >
      <SearchCollection
        client:load
        entry_name={'posts'}
        tags={tags}
        data={posts}
      />
    </div>
  </BottomLayout>
</PageLayout>
